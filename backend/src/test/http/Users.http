## Check if tag is taken
GET {{host}}/api/signup/check_tag?q=username

### Invalid initial signup request (invalid content type)
POST {{host}}/api/signup/initial
Content-Type: text/plain

Plain text here

> {%
    client.test("Request executed successfully", () => client.assert(response.status === 415, "Response status is not 415"))
%}

### Invalid initial signup request (missing address)
POST {{host}}/api/signup/initial
Content-Type: application/json

{
  "email": "example@gmail.com",
  "tag": "username",
  "phone": "+40123456789",
  "password": "password",
  "firstName": "John",
  "middleName": "Big",
  "lastName": "Doe",
  "dateOfBirth": "2001-05-05"
}

> {%
    client.test("Request executed successfully", () => client.assert(response.status === 400, "Response status is not 400"))
%}

### Invalid initial signup request (invalid email)
POST {{host}}/api/signup/initial
Content-Type: application/json

{
  "email": "some_invalid@email",
  "tag": "username",
  "phone": "+49123456789",
  "password": "password",
  "firstName": "John",
  "middleName": "Big",
  "lastName": "Doe",
  "dateOfBirth": "2001-05-05",
  "countryCode": "DE",
  "state": "Berlin",
  "city": "Berlin",
  "address": "123 Main St"
}

> {%
    client.test("Request executed successfully", () => client.assert(response.status === 400, "Response status is not 400"))
%}

### Correct initial signup request
POST {{host}}/api/signup/initial
Content-Type: application/json

{
  "email": "example@gmail.com",
  "tag": "username",
  "phone": "+40123456789",
  "password": "pAssw0rd!",
  "firstName": "John",
  "middleName": "Big",
  "lastName": "Doe",
  "dateOfBirth": "2001-05-05",
  "countryCode": "RO",
  "state": "Bucuresti",
  "city": "Bucuresti",
  "address": "Bd. Unirii"
}

> {%
    client.test("Request executed successfully", () => {
        client.assert(response.status === 200, "Response status is not 200")
        client.global.set("signupSession", response.headers["SignupSession"])
    })
%}

### Correct final signup request
POST {{host}}/api/signup/final
Content-Type: application/json
SignupSession: {{signupSession}}

{
  "smsCode": "123456"
}


### Invalid initial login request (invalid content type)
POST {{host}}/api/login/initial
Content-Type: text/plain

Plain text

> {%
    client.test("Request executed successfully", () => client.assert(response.status === 415, "Response status is not 415"))
%}

### Invalid initial login request (incorrect credentials)
POST {{host}}/api/login/initial
Content-Type: application/json

{
  "id": "example@gmail.com",
  "password": "password!"
}

> {%
    client.test("Request executed successfully", () => client.assert(response.status === 401, "Response status is not 401"))
%}

### Correct initial login request
POST {{host}}/api/login/initial
Content-Type: application/json

{
  "id": "example@gmail.com",
  "password": "pAssw0rd!"
}

> {%
    client.test("Request executed successfully", () => {
        client.assert(response.status === 200, "Response status is not 200")
        client.global.set("loginSession", response.headers.valueOf("LoginSession"))
    })
%}

### Invalid final login request (invalid session)
POST {{host}}/api/login/final
Content-Type: application/json

{
  "smsCode": "0000"
}

> {%
    client.test("Request executed successfully", () => client.assert(response.status === 401, "Response status is not 401"))
%}

### Invalid final login request (invalid sms code)
POST {{host}}/api/login/final
Content-Type: application/json
LoginSession: {{loginSession}}

{
  "smsCode": "0000"
}

> {%
    client.test("Request executed successfully", () => client.assert(response.status === 401, "Response status is not 401"))
%}

### Correct final login request
POST {{host}}/api/login/final
Content-Type: application/json
LoginSession: {{loginSession}}

{
  "smsCode": "123456"
}

> {%
    client.test("Request executed successfully", () => {
        client.assert(response.status === 200, "Response status is not 200")
        client.global.set("auth-token", response.headers["Authorization"])
    })
%}